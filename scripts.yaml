# Script to Turn on the Front outdoor lights when Garage door open and Turn off after 2 minutes.
garagelight:
  sequence:
    - service: light.turn_on
      entity_id: light.front_outdoor_light
    - delay:
        minutes: 2
    - service: light.turn_off
      entity_id: light.front_outdoor_light

# Script to execute the Xiaomi Gatway alarm
xiaomi_gateway_alarm:
  sequence:
    - service: xiaomi_aqara.play_ringtone
      data:
        ringtone_id: 2
        ringtone_vol: 15
        gw_mac: !secret xiaomi_mac
    - delay: 00:00:05
    - service: xiaomi_aqara.play_ringtone
      data:
        ringtone_id: 2
        ringtone_vol: 15
        gw_mac: !secret xiaomi_mac

# Script that executes on arrival at home after work
sonos_afternoon_greet:
  alias: "Sonos afternoon great - Living"
  sequence:
    - service: sonos.snapshot
      data_template:
        entity_id: media_player.living
    - service: media_player.media_pause
      data_template:
        entity_id: media_player.living
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living
        volume_level: "0.60"
    - service: tts.google_translate_say
      data_template:
        entity_id: media_player.living
        message: >
          Good Evening!, Welcome back home. ... {% set seconda = ["Hope you had a great day.","Hope you had a fantastic day.","I beleive you had a fantastic day."] %} {% set aindex = (range(0, (seconda | length - 1) )|random) %} 
          {{seconda[aindex]}}
          The temperature inside is {{ states('sensor.living_espmulti_t') | float | round }} degrees and the humidity is {{  states('sensor.living_espmulti_h') | int }} percent ...
           {% set secondb = ["Here is some music for you now ...","How about some music now ...","Let me play some music for you ..."] %} {% set bindex = (range(0, (secondb | length - 1) )|random) %} 
          {{secondb[bindex]}} 
          {% set secondr = ["Have a great evening.","Have a good one.","Goodbye.","Talk to you later."] %} {% set sindex = (range(0, (secondr | length - 1) )|random) %} 
          {{secondr[sindex]}}
    - service: script.turn_on
      data_template:
        entity_id: >
          {% if is_state('sun.sun', 'above_horizon') and is_state('input_boolean.blinds_auto', 'on') %}
            script.open_all_blinds
          {% else %}
            script.do_nothing
          {% endif %}
    - delay:
        seconds:  18
    - service: sonos.restore
      data_template:
        entity_id: media_player.living
    - delay:
        seconds:  2
    - service: script.turn_on
      data_template:
        entity_id: >-
          {% if 'Good' in state_attr('media_player.living', 'media_title') %}
            script.sonos_living_play_jazz
          {% elif is_state_attr('media_player.living', 'media_title', '') %}
            script.sonos_living_play_jazz
          {% else %}
            script.sonos_living_play_resume
          {% endif %}
    - service: input_boolean.turn_off
      entity_id: input_boolean.arrival_greet

# Script that executes good morning greet
sonos_morning_greet:
  alias: "Sonos morning greet - Living"
  sequence:
    - service: sonos.snapshot
      data_template:
        entity_id: media_player.living
    - service: media_player.media_pause
      data_template:
        entity_id: media_player.living
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living
        volume_level: "0.60"
    - service: tts.google_translate_say
      data_template:
        entity_id: media_player.living
        message: >
          Good morning!. It's currently {{ states('sensor.dark_sky_summary') }} and {{ states('sensor.dark_sky_temperature') |round}} degrees in Treeby. Today it will be {{  states('sensor.dark_sky_hourly_summary') |replace(".", "")}} ... 
          I will now turn on the TV. ...  
          {% set secondr = ["Have a great day.","Enjoy the day","Have a good one.","Talk to you later."] %} {% set sindex = (range(0, (secondr | length - 1) )|random) %} 
          {{secondr[sindex]}}
    - service: script.turn_on
      data_template:
        entity_id: >
          {% if is_state('sun.sun', 'above_horizon') and is_state('input_boolean.blinds_auto', 'on') %}
            script.open_all_blinds
          {% else %}
            script.do_nothing
          {% endif %}
    - delay:
        seconds:  18
    - service: sonos.restore
      data_template:
        entity_id: media_player.living
    - service: remote.turn_on
      entity_id: remote.Living
      data:
        activity: "Watch TV"
    - service: input_boolean.turn_off
      entity_id: input_boolean.morning_greet

# Rainmachine Sprinkler Turn on Call
rainmachine_zoneon:
  description: 'Rainmachine Sprinkler Turn on Call'
  fields:
    id:
      description: 'zone id'
      example: '2'
  sequence:
    - service: rainmachine.start_zone
      data_template:
        zone_id: '{{ id | int }}'
        zone_run_time: "{{ states('sensor.sprinkler_runtime_seconds') | int }}"

# Resume Living Sonos
sonos_living_play_resume:
  description: 'Resume Existing Playlist in Living Sonos'
  alias: "Resume Existing Playlist in Living Sonos"
  sequence:
    - service: media_player.media_play
      data_template:
        entity_id: media_player.living

# Pause Living Sonos
sonos_living_pause:
  description: 'Pause Living Sonos'
  alias: "Pause Living Sonos"
  sequence:
    - service: media_player.media_pause
      data_template:
        entity_id: media_player.living

# Play Living Sonos Jazz Playlist
sonos_living_play_jazz:
  description: 'Play Jazz Playlist in Living Sonos'
  alias: "Play Jazz Playlist in Living Sonos"
  sequence:
    - service: media_player.play_media
      data_template:
        entity_id: media_player.living
        media_content_type: playlist
        media_content_id: 'Jazz'


# Play Living Sonos Playlist
sonos_living_play_playlist:
  description: 'Play Playlist in Living Sonos'
  alias: "Play Playlist in Living Sonos"
  fields:
    playlist:
      description: 'Playlist Name'
      example: 'Jazz'
  sequence:
    - service: media_player.play_media
      data_template:
        entity_id: media_player.living
        media_content_type: playlist
        media_content_id: '{{ playlist }}'

# Play Living Sonos Lullabies Playlist
sonos_living_play_lullabies:
  description: 'Play Lullabies Playlist in Living Sonos'
  alias: "Play Lullabies Playlist in Living Sonos"
  sequence:
    - service: media_player.shuffle_set
      data_template:
        entity_id: media_player.living
        shuffle: true
    - service: media_player.play_media
      data_template:
        entity_id: media_player.living
        media_content_type: playlist
        media_content_id: 'Lullabies'

# Play/Pause Living Sonos Lullabies
play_pause_sonos_living_play_lullabies:
  description: 'Play Pause Living Sonos Lullabies'
  alias: "Play Pause Living Sonos Lullabies"
  sequence:
    - service: script.turn_on
      data_template:
        entity_id: >
          {% if is_state('binary_sensor.lullabies_music_sensor', 'on') %}
            script.sonos_living_pause
          {% else %}
            script.sonos_living_play_lullabies
          {% endif %}

# Resume Alfresco Sonos
sonos_alfresco_play_resume:
  description: 'Resume Existing Playlist in Alfresco Sonos'
  alias: "Resume Existing Playlist in Alfresco Sonos"
  sequence:
    - service: media_player.media_play
      data_template:
        entity_id: media_player.alfresco

# Play Alfresco Sonos Jazz Playlist
sonos_alfresco_play_jazz:
  description: 'Play Jazz Playlist in Alfresco Sonos'
  alias: "Play Jazz Playlist in Alfresco Sonos"
  sequence:
    - service: media_player.play_media
      data_template:
        entity_id: media_player.alfresco
        media_content_type: playlist
        media_content_id: 'Jazz'

# Play Alfresco Sonos
sonos_alfresco_play:
  description: 'Play music in Alfresco Sonos'
  alias: "Play music in Alfresco Sonos'"
  sequence:
    - service: script.turn_on
      data_template:
        entity_id: >-
          {% if is_state_attr('media_player.alfresco', 'media_title', '') %}
            script.sonos_alfresco_play_jazz
          {% else %}
            script.sonos_alfresco_play_resume
          {% endif %}

# Script that executes when leaving home
leave_home_workflow:
  alias: "Leave Home"
  sequence:
    - service: script.turn_on
      data_template:
        entity_id: >
          {% if is_state('input_boolean.blinds_auto', 'on') %}
            script.close_all_blinds
          {% else %}
            script.do_nothing
          {% endif %}
    - service: remote.turn_on
      entity_id: remote.Living
      data:
        activity: "PowerOff"
    - service: light.turn_off
      entity_id: light.living_dimmer
    - service: light.turn_off
      entity_id: light.kitchen_dimmer
    - service: media_player.media_pause
      data_template:
        entity_id: media_player.living

# Launch HA Dashboard
launch_ha_dashboard:
  description: 'Launch Home Assistant Dashboard'
  alias: "Home Assistant Dashboard"
  sequence:
    - service: cast.show_lovelace_view
      data:
        entity_id: media_player.kitchen_display
        view_path: home

# Launch HA floorplan
launch_ha_floorplan:
  description: 'Launch Home Assistant Floorplan'
  alias: "Home Assistant Floorplan"
  sequence:
    - service: cast.show_lovelace_view
      data:
        entity_id: media_player.kitchen_display
        view_path: "4"


# Toggle TV
toggle_tv:
  description: 'Toggle TV'
  alias: "Toggle TV"
  sequence:
    - service: remote.turn_on
      entity_id: remote.Living
      data_template:
        activity: >-
          {% if is_state('media_player.yamaha_receiver', 'on') %}
            PowerOff
          {% else %}
            Watch TV
          {% endif %}

# Open all blinds
open_all_blinds:
  alias: "Open all blinds"
  sequence:
    - service: cover.open_cover
      entity_id: cover.tv_blind_left
    - service: cover.open_cover
      entity_id: cover.tv_blind_right
    - service: cover.open_cover
      entity_id: cover.living_blind_1
    - service: cover.open_cover
      entity_id: cover.living_blind_2
    - service: cover.open_cover
      entity_id: cover.dining_blind_1
    - service: cover.open_cover
      entity_id: cover.dining_blind_2

# Close all blinds
close_all_blinds:
  alias: "Close all blinds"
  sequence:
    - service: cover.close_cover
      entity_id: cover.tv_blind_left
    - service: cover.close_cover
      entity_id: cover.tv_blind_right
    - service: cover.close_cover
      entity_id: cover.living_blind_1
    - service: cover.close_cover
      entity_id: cover.living_blind_2
    - service: cover.close_cover
      entity_id: cover.dining_blind_1
    - service: cover.close_cover
      entity_id: cover.dining_blind_2

# Do Nothing Script
do_nothing:
  alias: "Do Nothing Script"
  sequence:

# Send snaptshot in Garage
send_snapshot_garage:
  alias: "Send snapshot Garage"
  sequence:
    - service: camera.snapshot
      data:
        entity_id: camera.garage_camera
        filename: !secret garagecameranotifytemp
    - delay:
        seconds: 5
    - service: notify.pushbullet
      data:
        title: 'Garage Door was left open for more than 10 minutes -  {{now().strftime("%m/%d/%Y - %I:%M %p")}}'
        message:  'Garage door was left open for more than 10 minutes'
        data:
          file: !secret garagecameranotifytemp

# Sonos Alarm Bell
sonos_alarm_bell:
  alias: "Sonos Alarm Bell"
  sequence:
    - service: sonos.snapshot
      data_template:
        entity_id: media_player.living
    - service: media_player.media_pause
      data_template:
        entity_id: media_player.living
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living
        volume_level: "0.60"
    - service: media_player.play_media
      data_template:
        entity_id: media_player.living
        media_content_id: !secret dingdong
        media_content_type: music
    - delay:
        seconds:  5
    - service: sonos.restore
      data_template:
        entity_id: media_player.living