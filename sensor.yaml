# MyAir Sensor
  - platform: rest
    resource: http://10.1.1.180:2025/getSystemData
    name: myair
    value_template: 'OK'
    json_attributes:
      - aircons

# unify gateway
  - platform: unifigateway
    host: '10.1.1.218'
    username: !secret unifi_username
    password: !secret unifi_password
    monitored_conditions:
      - www
      - wlan
      - alerts
      - firmware

# fitbit
  - platform: fitbit
    clock_format: 12H
    monitored_resources:
      - "activities/heart"
      - "activities/steps"
      - "sleep/minutesAsleep"
      - "sleep/timeInBed"

# Air conditioner average up time for 2 hours
  - platform: history_stats
    name: myair_state_avg2hr
    entity_id: switch.myair_power
    state: 'on'
    type: time
    end: '{{ now() }}'
    duration:
      hours: 2

# Air conditioner average up time for 4 hours
  - platform: history_stats
    name: myair_state_avg4hr
    entity_id: switch.myair_power
    state: 'on'
    type: time
    end: '{{ now() }}'
    duration:
      hours: 4

# Front Lawn daily avg stats
  - platform: history_stats
    name: front_lawn_daily_stats
    entity_id: switch.front_lawn
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

# Front Side Lawn daily avg stats
  - platform: history_stats
    name: front_side_lawn_daily_stats
    entity_id: switch.front_side_lawn
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

# Front Plants daily avg stats
  - platform: history_stats
    name: front_plants_daily_stats
    entity_id: switch.front_plants
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

# Side Trees daily avg stats
  - platform: history_stats
    name: side_trees_daily_stats
    entity_id: switch.side_trees
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

# Back Planter Boxes daily avg stats
  - platform: history_stats
    name: back_planter_boxes_daily_stats
    entity_id: switch.back_planter_boxes
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

# Back Lawn daily avg stats
  - platform: history_stats
    name: back_lawn_daily_stats
    entity_id: switch.back_lawn
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'






# DarkSky Weather 
  - platform: darksky
    api_key: !secret darksky_key
    latitude: !secret darksky_lat
    longitude: !secret darksky_long
    scan_interval: '00:10:00'
    monitored_conditions:
        - summary
        - temperature
        - hourly_summary
        - temperature_high


#  Efergy solar monitoring
  - platform: efergy
    app_token: !secret efergy_appkey
    utc_offset: 0
    monitored_variables:
      - type: instant_readings
      - type: current_values



  - platform: template
    sensors:
    # MyAir Sensors (Air Conditioner)
      myair_state:
        friendly_name: AC State
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.info["state"] }}'
      myair_fanspeed:
        friendly_name: AC Fan Speed
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.info["fan"] }}'
      myair_mode:
        friendly_name: AC Mode
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.info["mode"] }}'
      myair_settemp:
        friendly_name: AC Set Temperature
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.info["setTemp"] }}'
      myair_zone1_state:
        friendly_name: Zone 1 A/C Zone State
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.zones.z01["state"] }}'
      myair_zone1_cover:
        friendly_name: Zone 1 A/C Zone Airflow
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.zones.z01["value"] }}'
      myair_zone2_state:
        friendly_name: Zone 2 A/C Zone State
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.zones.z02["state"] }}'
      myair_zone2_cover:
        friendly_name: Zone 2 A/C Zone Airflow
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.zones.z02["value"] }}'
      myair_zone3_state:
        friendly_name: Zone 3 A/C Zone State
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.zones.z03["state"] }}'
      myair_zone3_cover:
        friendly_name: Zone 3 A/C Zone Airflow
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.zones.z03["value"] }}'
      myair_zone4_state:
        friendly_name: Zone 4 A/C Zone State
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.zones.z04["state"] }}'
      myair_zone4_cover:
        friendly_name: Zone 4 A/C Zone Airflow
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.zones.z04["value"] }}'
      myair_zone5_state:
        friendly_name: Zone 5 A/C Zone State
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.zones.z05["state"] }}'
      myair_zone5_cover:
        friendly_name: Zone 5 A/C Zone Airflow
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.zones.z05["value"] }}'
      myair_zone6_state:
        friendly_name: Zone 6 A/C Zone State
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.zones.z06["state"] }}'
      myair_zone6_cover:
        friendly_name: Zone 6 A/C Zone Airflow
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.zones.z06["value"] }}'
      myair_start_timer:
        friendly_name: My Air Start Timer
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.info["countDownToOn"] }}'
      myair_stop_timer:
        friendly_name: My Air Stop Timer
        value_template: '{{ states.sensor.myair.attributes.aircons.ac1.info["countDownToOff"] }}'

    # Time sensors
      part_of_day:
        friendly_name: 'Part of Day'
        value_template: >
          {% set hour = strptime(states('sensor.time'), "%H:%M").hour %}
          {% if 7 <= hour < 12 %}    Morning
          {% elif 12 <= hour < 18 %} Afternoon
          {% elif 18 <= hour < 22 %} Evening
          {% else %}                 Midnight
          {% endif %}
        icon_template: >
          {% if is_state('sensor.part_of_day', 'Morning') %}     mdi:weather-sunset-up
          {% elif is_state('sensor.part_of_day', 'Afternoon') %} mdi:weather-sunny
          {% elif is_state('sensor.part_of_day', 'Evening') %}   mdi:weather-sunset-down
          {% else %}                                             mdi:weather-night
          {% endif %}


    # Battery Sensors        
      main_door_battery:
        friendly_name: Main Door Sensor Battery
        value_template: >
          {% if is_state('binary_sensor.door_window_sensor_158d0002739295', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.door_window_sensor_158d0002739295.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.door_window_sensor_158d0002739295.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.door_window_sensor_158d0002739295', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      garage_door_battery:
        friendly_name: Garage Door Sensor Battery
        value_template: >
          {% if is_state('binary_sensor.door_window_sensor_158d0002c0e236', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.door_window_sensor_158d0002c0e236.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.door_window_sensor_158d0002c0e236.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.door_window_sensor_158d0002c0e236', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      laundry_door_battery:
        friendly_name: Laundry Door Sensor Battery
        value_template: >
          {% if is_state('binary_sensor.door_window_sensor_158d0002ca3100', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.door_window_sensor_158d0002ca3100.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.door_window_sensor_158d0002ca3100.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.door_window_sensor_158d0002ca3100', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      bath_motion_battery:
        friendly_name: Bath Motion Sensor Battery
        value_template: >
          {% if is_state('binary_sensor.motion_sensor_158d0001e0ac8e', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.motion_sensor_158d0001e0ac8e.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.motion_sensor_158d0001e0ac8e.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.motion_sensor_158d0001e0ac8e', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      kitchen_motion_2_battery:
        friendly_name: Kitchen Motion Sensor 2 Battery
        value_template: >
          {% if is_state('binary_sensor.motion_sensor_158d0002742898', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.motion_sensor_158d0002742898.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.motion_sensor_158d0002742898.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.motion_sensor_158d0002742898', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      alfresco_motion_battery:
        friendly_name: Alfresco Motion Sensor Battery
        value_template: >
          {% if is_state('binary_sensor.motion_sensor_158d0002b5eecd', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.motion_sensor_158d0002b5eecd.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.motion_sensor_158d0002b5eecd.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.motion_sensor_158d0002b5eecd', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      office_motion_2_battery:
        friendly_name: Office Motion Sensor 2 Battery
        value_template: >
          {% if is_state('binary_sensor.motion_sensor_158d0002b7ec00', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.motion_sensor_158d0002b7ec00.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.motion_sensor_158d0002b7ec00.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.motion_sensor_158d0002b7ec00', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      master_motion_2_battery:
        friendly_name: Master Motion Sensor 2 Battery
        value_template: >
          {% if is_state('binary_sensor.motion_sensor_158d0002b7f1e8', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.motion_sensor_158d0002b7f1e8.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.motion_sensor_158d0002b7f1e8.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.motion_sensor_158d0002b7f1e8', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      shower_motion_battery:
        friendly_name: Shower Motion Sensor Battery
        value_template: >
          {% if is_state('binary_sensor.motion_sensor_158d0002c6382d', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.motion_sensor_158d0002c6382d.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.motion_sensor_158d0002c6382d.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.motion_sensor_158d0002c6382d', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      living_motion_battery:
        friendly_name: Living Motion Sensor Battery
        value_template: >
          {% if is_state('binary_sensor.motion_sensor_158d0002c716b6', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.motion_sensor_158d0002c716b6.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.motion_sensor_158d0002c716b6.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.motion_sensor_158d0002c716b6', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      garage_motion_2_battery:
        friendly_name: Garage Motion Sensor 2 Battery
        value_template: >
          {% if is_state('binary_sensor.motion_sensor_158d0002c716d7', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.motion_sensor_158d0002c716d7.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.motion_sensor_158d0002c716d7.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.motion_sensor_158d0002c716d7', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      smoke_sensor_battery:
        friendly_name: Smoke Sensor Battery
        value_template: >
          {% if is_state('binary_sensor.smoke_sensor_158d00028ee45d', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.smoke_sensor_158d00028ee45d.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.smoke_sensor_158d00028ee45d.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.smoke_sensor_158d00028ee45d', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      alfresco_button_battery:
        friendly_name: Alfresco Music Button Battery
        value_template: >
          {% if is_state('binary_sensor.switch_158d0002860904', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.switch_158d0002860904.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.switch_158d0002860904.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.switch_158d0002860904', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      madhushi_bedside_button_battery:
        friendly_name: Madhushi Bedside Button Battery
        value_template: >
          {% if is_state('binary_sensor.switch_158d00035f34ec', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.switch_158d00035f34ec.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.switch_158d00035f34ec.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.switch_158d00035f34ec', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      sameera_bedside_button_battery:
        friendly_name: Sameera Bedside Button Battery
        value_template: >
          {% if is_state('binary_sensor.switch_158d000407e1ec', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.switch_158d000407e1ec.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.switch_158d000407e1ec.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.switch_158d000407e1ec', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      living_button_battery:
        friendly_name: Living Button Battery
        value_template: >
          {% if is_state('binary_sensor.switch_158d000323d424', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.switch_158d000323d424.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.switch_158d000323d424.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.switch_158d000323d424', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      temperature_sensor_1_battery:
        friendly_name: Switch Box Temperature Sensor Battery
        value_template: >
          {% if is_state('sensor.temperature_158d0002731398', 'unknown') %}
            110
          {% else %}
            {{ states.sensor.temperature_158d0002731398.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.sensor.temperature_158d0002731398.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('sensor.temperature_158d0002731398', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      garage_entry_door_battery:
        friendly_name: Garage Entry Door Sensor Battery
        value_template: >
          {% if is_state('binary_sensor.door_window_sensor_158d00033a7262', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.door_window_sensor_158d00033a7262.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.door_window_sensor_158d00033a7262.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.door_window_sensor_158d00033a7262', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'
      master_bedroom_door_battery:
        friendly_name: Master Bedroom Door Sensor Battery
        value_template: >
          {% if is_state('binary_sensor.door_window_sensor_158d0003677216', 'unknown') %}
            110
          {% else %}
            {{ states.binary_sensor.door_window_sensor_158d0003677216.attributes["battery_level"] | float}}
          {% endif %}
        icon_template: >
          {% set battery_level_xod1 = states.binary_sensor.door_window_sensor_158d0003677216.attributes.battery_level|default(0)|int %}
          {% set battery_round_xod1 = (battery_level_xod1 / 10) |int * 10 %}
          {% if battery_round_xod1 >= 100 or is_state('binary_sensor.door_window_sensor_158d0003677216', 'unknown') %}
            mdi:battery
          {% elif battery_round_xod1 > 0 %}
            mdi:battery-{{ battery_round_xod1 }}
          {% else %}
            mdi:battery-charging-wireless-outline
          {% endif %}
        unit_of_measurement: '%'

# Sprinkler Minute Template Sensors
      front_lawn_daily_stats_mins:
        friendly_name: Front lawn Daily Stats
        value_template: "{% set hours = states('sensor.front_lawn_daily_stats') | float %} 
          {% set minutes = ((hours % 1) * 60) | round | int %}  
          {{ minutes }}"
        unit_of_measurement: 'minutes'

      front_side_lawn_daily_stats_mins:
        friendly_name: Front Side lawn Daily Stats
        value_template: "{% set hours = states('sensor.front_side_lawn_daily_stats') | float %} 
          {% set minutes = ((hours % 1) * 60) | round | int %}  
          {{ minutes }}"
        unit_of_measurement: 'minutes'
      
      front_plants_daily_stats_mins:
        friendly_name: Front Plants Daily Stats
        value_template: "{% set hours = states('sensor.front_plants_daily_stats') | float %} 
          {% set minutes = ((hours % 1) * 60) | round | int %}  
          {{ minutes }}"
        unit_of_measurement: 'minutes'

      side_trees_daily_stats_mins:
        friendly_name: Side Trees Daily Stats
        value_template: "{% set hours = states('sensor.side_trees_daily_stats') | float %} 
          {% set minutes = ((hours % 1) * 60) | round | int %}  
          {{ minutes }}"
        unit_of_measurement: 'minutes'

      back_planter_boxes_daily_stats_mins:
        friendly_name: Back Planter Boxes Daily Stats
        value_template: "{% set hours = states('sensor.back_planter_boxes_daily_stats') | float %} 
          {% set minutes = ((hours % 1) * 60) | round | int %}  
          {{ minutes }}"
        unit_of_measurement: 'minutes'

      back_lawn_daily_stats_mins:
        friendly_name: Back Lawn Daily Stats
        value_template: "{% set hours = states('sensor.back_lawn_daily_stats') | float %} 
          {% set minutes = ((hours % 1) * 60) | round | int %}  
          {{ minutes }}"
        unit_of_measurement: 'minutes'

      sprinkler_runtime_seconds:
        friendly_name: Sprinkler Runtime in seconds
        value_template: >
          {% if is_state('input_select.sprinkler_runtime', '1 min') %}
            60
          {% elif is_state('input_select.sprinkler_runtime', '2 mins') %}
            120
          {% elif is_state('input_select.sprinkler_runtime', '5 mins') %}
            300
          {% elif is_state('input_select.sprinkler_runtime', '10 mins') %}
            600
          {% else %}
            60
          {% endif %}
        unit_of_measurement: 'seconds'

# Unify Gateway sensors
      unifi_gateway_www_speed_down:
          friendly_name: 'USG Download Speed'
          unit_of_measurement: KBps
          value_template: "{{ (states.sensor.unifi_gateway_www.attributes['rx_bytes-r'] | int / 1024) | round(1) }}"
      unifi_gateway_www_speed_up:
          friendly_name: 'USG Upload Speed'
          unit_of_measurement: KBps
          value_template: "{{ (states.sensor.unifi_gateway_www.attributes['tx_bytes-r'] | int / 1024) | round(1) }}"

# water meter
      water_usage_liters:
        unit_of_measurement: 'l'
        friendly_name: 'Water Usage Liters'
        value_template: "{{ states('counter.water_meter_count') | int }}"

# mqtt alfresco image processing sensor
  - platform: mqtt
    name : alfresco_azure_image_processing
    state_topic: "home/alfresco/image_processing_sensor/state"

# mqtt garage sensor
  - platform: mqtt
    name: garage_door_sensor
    state_topic: "home/garage/garage_door/stat/POWER"

# Time sensor
  - platform: time_date
    display_options:
      - 'time'

# # Australian Bureau of Meteorology (BOM)
#   - platform: bom
#     station: !secret bomstationid
#     monitored_conditions:
#       - apparent_t
#       - cloud
#  #     - cloud_base_m
#  #     - cloud_oktas
#  #     - cloud_type_id
#  #     - cloud_type
#       - delta_t
#       - gust_kmh
#       - gust_kt
#       - air_temp
#       - dewpt
#       - local_date_time
#       - local_date_time_full
#       - press
#       - press_qnh
#       - press_msl
#       - press_tend
#       - rain_trace
#       - rel_hum
#       - sea_state
#       - swell_dir_worded
#       - swell_height
#       - swell_period
#       - vis_km
#       - weather
#       - wind_dir
#       - wind_spd_kmh
#       - wind_spd_kt


# mqtt frigate office desk sensor value
  - platform: mqtt
    name: "Frigate Office Desk Camera Value"
    state_topic: "frigate/officetable/person"

# mqtt frigate living sensor value
  - platform: mqtt
    name: "Frigate Living Camera Value"
    state_topic: "frigate/living/person"

# mqtt frigate alfresco sensor value
  - platform: mqtt
    name: "Frigate Alfresco Camera Value"
    state_topic: "frigate/alfresco/person"